generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String
  role        String        @default("USER")
  wishlists   Wishlist[]
  cartItems   CartItem[]
  orders      Order[]
  messages    ContactMessage[]
  createdAt   DateTime       @default(now())
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  products    Product[]
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  price       Float
  categoryId  Int
  category    Category      @relation(fields: [categoryId], references: [id])
  imageUrl    String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  wishlists   Wishlist[]
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model Wishlist {
  id          Int           @id @default(autoincrement())
  userId      Int
  user        User          @relation(fields: [userId], references: [id])
  productId   Int
  product     Product       @relation(fields: [productId], references: [id])
  createdAt   DateTime       @default(now())
}

model CartItem {
  id          Int           @id @default(autoincrement())
  userId      Int
  user        User          @relation(fields: [userId], references: [id])
  productId   Int
  product     Product       @relation(fields: [productId], references: [id])
  quantity    Int           @default(1)
  createdAt   DateTime       @default(now())
}

model Order {
  id          Int           @id @default(autoincrement())
  userId      Int
  user        User          @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
  payments    Payment[]
  totalAmount Float
  status      String        @default("PENDING")
  createdAt   DateTime       @default(now())
}

model OrderItem {
  id          Int           @id @default(autoincrement())
  orderId     Int
  order       Order         @relation(fields: [orderId], references: [id])
  productId   Int
  product     Product       @relation(fields: [productId], references: [id])
  quantity    Int
  price       Float
}

model Payment {
  id          Int           @id @default(autoincrement())
  orderId     Int
  order       Order         @relation(fields: [orderId], references: [id])
  paymentDate DateTime       @default(now())
  amount      Float
  method      String         // CARD, PAYPAL, etc
  status      String         @default("SUCCESS")
}

model ContactMessage {
  id          Int           @id @default(autoincrement())
  userId      Int?
  user        User?         @relation(fields: [userId], references: [id])
  subject     String
  message     String
  createdAt   DateTime       @default(now())
}
